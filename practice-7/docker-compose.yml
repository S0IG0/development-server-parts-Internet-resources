version: '3'
services:

  db-redis:
    image: redis
    ports:
      - "6379:6379"

  apache:
    build:
      dockerfile: apache/Dockerfile
      context: .
    container_name: Php-practice-7
    volumes:
      - ./apache/static/:/var/www/html/
      - ./apache/conf/apache-config.conf:/etc/apache2/sites-available/000-default.conf
      - ./apache/conf/apache-config.conf:/etc/apache2/sites-enabled/000-default.conf
      - ./apache/conf/ports.conf:/etc/apache2/ports.conf
      - ./apache/logs/:/var/log/apache2/
    depends_on:
      - db-mysql

  db-mysql:
    image: mysql:5.7
    container_name: My-sql-practice-7
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: appDB
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  shop-java:
    env_file:
      - .env
    build:
      context: ./backend/shop
      dockerfile: Dockerfile
    container_name: shop-java-7
    volumes:
      - ./backend/shop/src/:/backend/src/
    command: >
      sh -c 
      "mvn install && 
      java -jar /backend/target/shop-0.0.1-SNAPSHOT.jar"
    ports:
      - "8080:8081"
  db-posgresql:
    env_file:
      - .env
    container_name: Postgresql-practice-7
    image: postgres:14-alpine3.17
    ports:
      - "5433:5432"
  nginx:
    container_name: Nginx-practice-7
    image: nginx:1.21.0-alpine
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/etc/nginx/logs
      - ./nginx/static/:/usr/share/nginx/html/
    ports:
      - "80:80"
    depends_on:
      - apache

